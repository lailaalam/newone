1.
#MySql Data Configuration
spring.datasource.driver = com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/cse_room
spring.datasource.username=root
spring.datasource.password=

#Thymeleaf Configuration

spring.thymeleaf.suffix=.html
spring.thymeleaf.cache = false
#DAO Configuration


spring.jpa.show-sql = true

#	Hibernate ddl auto (create, create-drop, validate, update) 
spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

2.
package com.exam.room.models;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

@Entity
@Table(name = "tblRoom")
public class Room {
    @Id
    @Column(name = "room_no")
    @NotNull(message = "This field Can Not be NULL")

    private String roomNo;
    @Column(name = "no_of_row")

    private int noOfRow;

    @Column(name = "bench_per_row")

    private int benchPerRow;

    @Column(name = "bench_capacity")
    private int benchCapacity;

    public String getRoomNo() {
        return roomNo;
    }
    public void setRoomNo(String room_no) {
        this.roomNo = room_no;

    }

    public int getNoOfRow() {
        return noOfRow;
    }

    public void setNoOfRow(int noOfRow) {

        this.noOfRow = noOfRow;
    }

    public int getBenchPerRow() {
        return benchPerRow;
    }

    public void setBenchPerRow(int benchPerRow) { this.benchPerRow = benchPerRow;
    }

    public int getBenchCapacity() {
        return benchCapacity;
    }


    public void setBenchCapacity(int benchCapacity) { this.benchCapacity = benchCapacity;
    }

    @Override
    public String toString() {
        return "Room{" +
                "roomNo='" + roomNo + '\'' +
                ", noOfRow=" + noOfRow +

                ", benchPerRow=" + benchPerRow +
                ", benchCapacity=" + benchCapacity +
                '}';
    }

    public Room() {
        roomNo="";
        noOfRow=1;
        benchPerRow=1;
        benchCapacity=1;

    }

}


3.
package com.exam.room.service;

import com.exam.room.models.Room;

import java.util.List;

public interface RoomService {
    public List<Room> getAllRooms();
    public Room getRoomById(String roomNo);
    public void saveOrUpdate(Room room);
    public void removeRoom(String roomNo);

}

4.
package com.exam.room.repository;

import com.exam.room.models.Room;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

@Repository
@Transactional
public interface RoomRepository extends JpaRepository<Room,String> {

}

5.
package com.exam.room.service;

import com.exam.room.models.Room;
import com.exam.room.repository.RoomRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;


@Service
@Transactional
public class RoomServiceImpl implements RoomService  {
    @Autowired

    RoomRepository roomRepository;

    @Override
    public List<Room> getAllRooms() {
        return roomRepository.findAll();

    }

    @Override

    public Room getRoomById(String roomNo) { return roomRepository.getOne(roomNo);

    }

    @Override
    public void saveOrUpdate(Room room) {
        roomRepository.save(room);

    }

    @Override
    public void removeRoom(String roomNo) {

        roomRepository.deleteById(roomNo);

    }
}




6.
package com.example.room.Controller;

import com.example.room.Service.RoomService;
import com.example.room.modal.Room;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import java.util.List;

@RequestMapping("/rooms")
@Controller
public class RoomController {
    @Autowired
    private RoomService roomService;

    @RequestMapping(value = "/a",method = RequestMethod.GET)
    public ModelAndView showAllRoom(){

        ModelAndView allRooms=new ModelAndView();
        List<Room> list= roomService.getAllRooms();
        allRooms.addObject("rooms",list);
        allRooms.setViewName("Room");


        return allRooms;
    }

    @RequestMapping(value = "/addNew",method = RequestMethod.GET)
    public ModelAndView addNewRoom(){

        ModelAndView allRooms=new ModelAndView( "roomForm.html");
        Room room=new Room();
        allRooms.addObject("room",room);
        //allRooms.setViewName("roomForm");
        return allRooms;

    }

    @RequestMapping(value = "/save",method = RequestMethod.POST)
    public ModelAndView saveRoom(@ModelAttribute("room") Room room){
        System.out.println(room.toString());

        roomService.saveOrUpdate(room);
        return new ModelAndView("redirect:/rooms/a");

    }

    @RequestMapping(value = "/edit/{roomNo}",method = RequestMethod.GET)
    public ModelAndView updateRoom(@PathVariable("roomNo") String roomN){

        ModelAndView mv=new ModelAndView("roomForm.html");
        Room room=roomService.getRoomById(roomN);
        mv.addObject(room);
       // mv.setViewName("roomForm");
        return mv;

    }

    @RequestMapping(value = "/remove/{roomNo}",method = RequestMethod.GET) public ModelAndView removeRoom(@PathVariable("roomNo") String roomN){

        roomService.removeRoom(roomN);

        return new ModelAndView("redirect:/rooms/a");
    }



}

7.html
<!DOCTYPE html>
<html lang="en" xmlns: th="http://www.thymeleaf.org" xmlns:th="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<h1>Display Rooms</h1>
<table border="1">

    <thead>
    <tr>
        <th> Room Number</th>
        <th> Number of Row</th>
        <th> Bench Per Row</th>
        <th> Bench Capacity</th>
        <th>Total Capacity</th>
        <th>Action</th>
    </tr>

    </thead>


    <tbody>

    <a th:href="@{/rooms/addNew}" >Add New Room</a> <tr th:each="room: ${rooms}">

        <td th:text="${room.roomNo}"></td>

        <td th:text="${room.noOfRow}"></td>
        <td th:text="${room.benchPerRow}"></td>
        <td th:text="${room.benchCapacity}"></td>
        <td

                th:text="${room.getBenchCapacity()*room.getNoOfRow()*room.getBenchPerRow()}"></td> <td>

        <a role="button" th:href="@{'/rooms/edit/'+ ${room.roomNo}}">EDIT </a> <a role="button" th:href="@{'/rooms/remove/' +

${room.roomNo}}">Delete</a>

    </td>


    </tr>
    </tbody>

    <tfoot>

    </tfoot>
</table>

</body>
</html>

7.
form:
<!DOCTYPE html>
<html lang="en" xmlns: th="http://www.thymeleaf.org" xmlns:th="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>
<form method="post" th:object="${room}" th:action="@{/rooms/save}"> <label>Enter Room Number : </label>

    <input type="text" th:field="*{roomNo}" th:value="${room.getRoomNo()}" placeholder="Enter Room Number">

    <br><hr><label>Enter Number of Row : </label>

    <input type="text" th:field="*{noOfRow}" th:value="${room.getNoOfRow()}" placeholder="Enter Number of Row">
    <br><hr><label>Enter Bench Per Row : </label>

    <input type="text" th:field="*{benchPerRow}" th:value="${room.getBenchPerRow()}" placeholder="Enter Bench per Row">

    <br><hr><label>Enter Bench Capacity : </label> <input type="text" th:field="*{benchCapacity}"

                                                          th:value="${room.getBenchCapacity()}" placeholder="Enter Bench Capacity"> <br><hr>

    <input type="submit" value="Save">

</form>


</body>
</html>
